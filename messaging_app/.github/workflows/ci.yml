name: Django Tests CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'messaging_app/**'
      - '.github/workflows/ci.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'messaging_app/**'
      - '.github/workflows/ci.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: test_messaging_db
          MYSQL_ROOT_PASSWORD: root_password
          MYSQL_USER: test_user
          MYSQL_PASSWORD: test_password
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
        ports:
          - 3306:3306

    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libmysqlclient-dev

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r messaging_app/requirements.txt

    - name: Wait for MySQL to be ready
      run: |
        for i in {1..30}; do
          mysqladmin -h 127.0.0.1 -u root -proot_password ping && break
          echo "Waiting for MySQL..."
          sleep 1
        done

    - name: Run Django migrations
      env:
        DJANGO_SETTINGS_MODULE: messaging_app.settings
        MYSQL_DATABASE: test_messaging_db
        MYSQL_USER: test_user
        MYSQL_PASSWORD: test_password
        MYSQL_HOST: 127.0.0.1
        MYSQL_PORT: 3306
        DEBUG: 'true'
      run: |
        cd messaging_app
        python manage.py migrate

    - name: Run Django tests
      env:
        DJANGO_SETTINGS_MODULE: messaging_app.settings
        MYSQL_DATABASE: test_messaging_db
        MYSQL_USER: test_user
        MYSQL_PASSWORD: test_password
        MYSQL_HOST: 127.0.0.1
        MYSQL_PORT: 3306
        DEBUG: 'true'
      run: |
        cd messaging_app
        python manage.py test --verbosity=2

    - name: Run tests with coverage
      env:
        DJANGO_SETTINGS_MODULE: messaging_app.settings
        MYSQL_DATABASE: test_messaging_db
        MYSQL_USER: test_user
        MYSQL_PASSWORD: test_password
        MYSQL_HOST: 127.0.0.1
        MYSQL_PORT: 3306
        DEBUG: 'true'
      run: |
        pip install coverage
        cd messaging_app
        coverage run --source='chats' manage.py test
        coverage report
        coverage xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        files: ./messaging_app/coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
